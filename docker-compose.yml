version: '3.3'
services:

  segmentify_producer_app:
    container_name: segmentify_producer_app
    image: segmentify_producer_app:1
    restart: always
    build: ./segmentify-producer/
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - kafka

  segmentify_consumer_app:
    container_name: segmentify_consumer_app
    image: segmentify_consumer_app:1
    restart: always
    build: ./segmentify-consumer/
    ports:
      - "8081:8081"
    environment:
      REDIS_HOST: segmentify_redis
      REDIS_PORT: 6379
    depends_on:
      - redis
      - kafka

  redis:
    container_name: segmentify_redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

volumes:
  database_data:
    driver: local

# docker build -t user-leave-tracking-app -f Dockerfile .
# docker ps
# docker images -a
# docker network ls
# docker run --name user-leave-tracking-app -p 8080:8080 user-leave-tracking-app
# docker image rm user-leave-tracking-app
# docker rmi $(docker images -a -q)

# docker-compose up -d